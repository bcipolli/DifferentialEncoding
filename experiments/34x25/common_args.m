function [cargs, opts] = common_args(varargin)
%

  % Add path to the base_args_and_setup function.
  script_dir = fileparts(which(mfilename));
  base_fn_dir = fullfile(script_dir, '..');
  addpath(base_fn_dir);

  opts = {'small'};

  cargs = base_args_and_setup( ...
    'debug', 1:10, 'ac.debug', 1:10, 'p.debug', 1:10, ...
    'ac.randState', 2,   'p.randState', 2, ...
    'distn',   {'normem3'},     'mu',        0, ...
    'sigma', [4., 10.], ...
    'nHidden', 850*2,          'hpl',       2,    'nConns',      15, ...
    'deType', 'de', ...
    ...% Input
    'ac.tol',    0*34/25, ... %tolerance for disconnected pixels
    ... % Training
    'ac.errorType', 2, ...
    'ac.XferFn',   [6 1], ...
    ...
    'ac.WeightInitScale', 0.01, ...
    'ac.WeightInitType', 'sprandn', ...
    'ac.TrainMode','resilient', ...
    'ac.wlim',            inf * [-1 1], ...
    'ac.dropout', 0.0, ...
    'ac.noise_input',     0.00, ...
    'ac.lambda',          0.00,         ...% regularization
    'ac.Pow', 1, ...
    ...
    'errorType', 3, ...
    'p.errorType', 3, ...   % cross-entropy
    'p.XferFn', [6, 7], ... % multi-class softmax
    ...
    'p.WeightInitScale', 0.10, ...
    'p.WeightInitType', 'sprandn', ...
    'p.TrainMode','resilient', ...
    'p.wlim',            inf * [-1 1], ...% regularization
    'p.dropout',         0.0, ...
    'p.noise_input',     0,         ...% regularization
    'p.lambda',          0.00,         ...% regularization
    'p.Pow',             1, ...
    ...
    'ac.rej.props', {'err'},                'p.rej.props', {'err'}, ... %err,max,nan
    'ac.rej.type',  {'max'},                'p.rej.type',  {'sample_std'}, ...
    'ac.rej.width', [NaN],                  'p.rej.width', [3], ...
    ... %output
    'out.data', {'info','mat'}, ...
    'out.plots', {'png'},  ...
    'out.titles', {'RH (narrow)', 'LH (wide)'},  ...
    varargin{:} ...
);
